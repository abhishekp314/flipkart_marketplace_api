/*
 * Flipkart Marketplace API
 * This API is offered by Flipkart Marketplace to sellers and partners for orders and listing management. <br /><br />You will need an access token to explore our APIs in the sandbox environment. For details on getting an access token, refer to the <a href='https://seller.flipkart.com/api-docs/FMSAPI.html#sandbox-environment'> documentation</a>. <br />Once you get the access token, use it to authorize the requests using the  <code>Authorize</code> button below. e.g. if your access token is <code>ACCTOK1</code>, the input for authorization should be <code>Bearer ACCTOK1</code>
 *
 * OpenAPI spec version: 3.0
 * Contact: seller-api-queries@flipkart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The SellerAddress model module.
 * @module model/SellerAddress
 * @version 3.0
 */
export class SellerAddress {
  /**
   * Constructs a new <code>SellerAddress</code>.
   * @alias module:model/SellerAddress
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>SellerAddress</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SellerAddress} obj Optional instance to populate.
   * @return {module:model/SellerAddress} The populated <code>SellerAddress</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SellerAddress();
      if (data.hasOwnProperty('sellerName'))
        obj.sellerName = ApiClient.convertToType(data['sellerName'], 'String');
      if (data.hasOwnProperty('pinCode'))
        obj.pinCode = ApiClient.convertToType(data['pinCode'], 'String');
      if (data.hasOwnProperty('city'))
        obj.city = ApiClient.convertToType(data['city'], 'String');
      if (data.hasOwnProperty('state'))
        obj.state = ApiClient.convertToType(data['state'], 'String');
      if (data.hasOwnProperty('stateCode'))
        obj.stateCode = ApiClient.convertToType(data['stateCode'], 'String');
      if (data.hasOwnProperty('addressLine1'))
        obj.addressLine1 = ApiClient.convertToType(data['addressLine1'], 'String');
      if (data.hasOwnProperty('addressLine2'))
        obj.addressLine2 = ApiClient.convertToType(data['addressLine2'], 'String');
      if (data.hasOwnProperty('landmark'))
        obj.landmark = ApiClient.convertToType(data['landmark'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} sellerName
 */
SellerAddress.prototype.sellerName = undefined;

/**
 * @member {String} pinCode
 */
SellerAddress.prototype.pinCode = undefined;

/**
 * @member {String} city
 */
SellerAddress.prototype.city = undefined;

/**
 * @member {String} state
 */
SellerAddress.prototype.state = undefined;

/**
 * @member {String} stateCode
 */
SellerAddress.prototype.stateCode = undefined;

/**
 * @member {String} addressLine1
 */
SellerAddress.prototype.addressLine1 = undefined;

/**
 * @member {String} addressLine2
 */
SellerAddress.prototype.addressLine2 = undefined;

/**
 * @member {String} landmark
 */
SellerAddress.prototype.landmark = undefined;

