/*
 * Flipkart Marketplace API
 * This API is offered by Flipkart Marketplace to sellers and partners for orders and listing management. <br /><br />You will need an access token to explore our APIs in the sandbox environment. For details on getting an access token, refer to the <a href='https://seller.flipkart.com/api-docs/FMSAPI.html#sandbox-environment'> documentation</a>. <br />Once you get the access token, use it to authorize the requests using the  <code>Authorize</code> button below. e.g. if your access token is <code>ACCTOK1</code>, the input for authorization should be <code>Bearer ACCTOK1</code>
 *
 * OpenAPI spec version: 3.0
 * Contact: seller-api-queries@flipkart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {PriceComponent} from './PriceComponent';

/**
 * The OrderItem model module.
 * @module model/OrderItem
 * @version 3.0
 */
export class OrderItem {
  /**
   * Constructs a new <code>OrderItem</code>.
   * @alias module:model/OrderItem
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>OrderItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OrderItem} obj Optional instance to populate.
   * @return {module:model/OrderItem} The populated <code>OrderItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new OrderItem();
      if (data.hasOwnProperty('orderItemId'))
        obj.orderItemId = ApiClient.convertToType(data['orderItemId'], 'String');
      if (data.hasOwnProperty('orderId'))
        obj.orderId = ApiClient.convertToType(data['orderId'], 'String');
      if (data.hasOwnProperty('cancellationGroupId'))
        obj.cancellationGroupId = ApiClient.convertToType(data['cancellationGroupId'], 'String');
      if (data.hasOwnProperty('orderDate'))
        obj.orderDate = ApiClient.convertToType(data['orderDate'], 'Date');
      if (data.hasOwnProperty('cancellationDate'))
        obj.cancellationDate = ApiClient.convertToType(data['cancellationDate'], 'Date');
      if (data.hasOwnProperty('paymentType'))
        obj.paymentType = ApiClient.convertToType(data['paymentType'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('cancellationReason'))
        obj.cancellationReason = ApiClient.convertToType(data['cancellationReason'], 'String');
      if (data.hasOwnProperty('cancellationSubReason'))
        obj.cancellationSubReason = ApiClient.convertToType(data['cancellationSubReason'], 'String');
      if (data.hasOwnProperty('courierReturn'))
        obj.courierReturn = ApiClient.convertToType(data['courierReturn'], 'Boolean');
      if (data.hasOwnProperty('quantity'))
        obj.quantity = ApiClient.convertToType(data['quantity'], 'Number');
      if (data.hasOwnProperty('fsn'))
        obj.fsn = ApiClient.convertToType(data['fsn'], 'String');
      if (data.hasOwnProperty('sku'))
        obj.sku = ApiClient.convertToType(data['sku'], 'String');
      if (data.hasOwnProperty('listingId'))
        obj.listingId = ApiClient.convertToType(data['listingId'], 'String');
      if (data.hasOwnProperty('hsn'))
        obj.hsn = ApiClient.convertToType(data['hsn'], 'String');
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('packageIds'))
        obj.packageIds = ApiClient.convertToType(data['packageIds'], ['String']);
      if (data.hasOwnProperty('priceComponents'))
        obj.priceComponents = PriceComponent.constructFromObject(data['priceComponents']);
      if (data.hasOwnProperty('serviceProfile'))
        obj.serviceProfile = ApiClient.convertToType(data['serviceProfile'], 'String');
      if (data.hasOwnProperty('is_replacement'))
        obj.isReplacement = ApiClient.convertToType(data['is_replacement'], 'Boolean');
    }
    return obj;
  }
}

/**
 * @member {String} orderItemId
 */
OrderItem.prototype.orderItemId = undefined;

/**
 * @member {String} orderId
 */
OrderItem.prototype.orderId = undefined;

/**
 * @member {String} cancellationGroupId
 */
OrderItem.prototype.cancellationGroupId = undefined;

/**
 * @member {Date} orderDate
 */
OrderItem.prototype.orderDate = undefined;

/**
 * @member {Date} cancellationDate
 */
OrderItem.prototype.cancellationDate = undefined;

/**
 * Allowed values for the <code>paymentType</code> property.
 * @enum {String}
 * @readonly
 */
OrderItem.PaymentTypeEnum = {
  /**
   * value: "COD"
   * @const
   */
  COD: "COD",

  /**
   * value: "PREPAID"
   * @const
   */
  PREPAID: "PREPAID"
};
/**
 * @member {module:model/OrderItem.PaymentTypeEnum} paymentType
 */
OrderItem.prototype.paymentType = undefined;

/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
OrderItem.StatusEnum = {
  /**
   * value: "APPROVED"
   * @const
   */
  APPROVED: "APPROVED",

  /**
   * value: "PACKING_IN_PROGRESS"
   * @const
   */
  PACKING_IN_PROGRESS: "PACKING_IN_PROGRESS",

  /**
   * value: "FORM_FAILED"
   * @const
   */
  FORM_FAILED: "FORM_FAILED",

  /**
   * value: "PACKED"
   * @const
   */
  PACKED: "PACKED",

  /**
   * value: "READY_TO_DISPATCH"
   * @const
   */
  READY_TO_DISPATCH: "READY_TO_DISPATCH",

  /**
   * value: "PICKUP_COMPLETE"
   * @const
   */
  PICKUP_COMPLETE: "PICKUP_COMPLETE",

  /**
   * value: "CANCELLED"
   * @const
   */
  CANCELLED: "CANCELLED",

  /**
   * value: "RETURN_REQUESTED"
   * @const
   */
  RETURN_REQUESTED: "RETURN_REQUESTED",

  /**
   * value: "RETURNED"
   * @const
   */
  RETURNED: "RETURNED",

  /**
   * value: "SHIPPED"
   * @const
   */
  SHIPPED: "SHIPPED",

  /**
   * value: "DELIVERED"
   * @const
   */
  DELIVERED: "DELIVERED",

  /**
   * value: "COMPLETED"
   * @const
   */
  COMPLETED: "COMPLETED"
};
/**
 * @member {module:model/OrderItem.StatusEnum} status
 */
OrderItem.prototype.status = undefined;

/**
 * @member {String} cancellationReason
 */
OrderItem.prototype.cancellationReason = undefined;

/**
 * @member {String} cancellationSubReason
 */
OrderItem.prototype.cancellationSubReason = undefined;

/**
 * @member {Boolean} courierReturn
 */
OrderItem.prototype.courierReturn = undefined;

/**
 * @member {Number} quantity
 */
OrderItem.prototype.quantity = undefined;

/**
 * @member {String} fsn
 */
OrderItem.prototype.fsn = undefined;

/**
 * @member {String} sku
 */
OrderItem.prototype.sku = undefined;

/**
 * @member {String} listingId
 */
OrderItem.prototype.listingId = undefined;

/**
 * @member {String} hsn
 */
OrderItem.prototype.hsn = undefined;

/**
 * @member {String} title
 */
OrderItem.prototype.title = undefined;

/**
 * @member {Array.<String>} packageIds
 */
OrderItem.prototype.packageIds = undefined;

/**
 * @member {module:model/PriceComponent} priceComponents
 */
OrderItem.prototype.priceComponents = undefined;

/**
 * Allowed values for the <code>serviceProfile</code> property.
 * @enum {String}
 * @readonly
 */
OrderItem.ServiceProfileEnum = {
  /**
   * value: "Flipkart_Fulfilment"
   * @const
   */
  flipkartFulfilment: "Flipkart_Fulfilment",

  /**
   * value: "Seller_Fulfilment"
   * @const
   */
  sellerFulfilment: "Seller_Fulfilment",

  /**
   * value: "Smart_Fulfilment"
   * @const
   */
  smartFulfilment: "Smart_Fulfilment",

  /**
   * value: "FBF"
   * @const
   */
  FBF: "FBF",

  /**
   * value: "NON_FBF"
   * @const
   */
  NON_FBF: "NON_FBF",

  /**
   * value: "FBF_LITE"
   * @const
   */
  FBF_LITE: "FBF_LITE"
};
/**
 * @member {module:model/OrderItem.ServiceProfileEnum} serviceProfile
 */
OrderItem.prototype.serviceProfile = undefined;

/**
 * @member {Boolean} isReplacement
 */
OrderItem.prototype.isReplacement = undefined;

