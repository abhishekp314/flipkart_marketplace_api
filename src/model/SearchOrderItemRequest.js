/*
 * Flipkart Marketplace API
 * This API is offered by Flipkart Marketplace to sellers and partners for orders and listing management. <br /><br />You will need an access token to explore our APIs in the sandbox environment. For details on getting an access token, refer to the <a href='https://seller.flipkart.com/api-docs/FMSAPI.html#sandbox-environment'> documentation</a>. <br />Once you get the access token, use it to authorize the requests using the  <code>Authorize</code> button below. e.g. if your access token is <code>ACCTOK1</code>, the input for authorization should be <code>Bearer ACCTOK1</code>
 *
 * OpenAPI spec version: 3.0
 * Contact: seller-api-queries@flipkart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Filter} from './Filter';
import {Pagination} from './Pagination';
import {Sort} from './Sort';

/**
 * The SearchOrderItemRequest model module.
 * @module model/SearchOrderItemRequest
 * @version 3.0
 */
export class SearchOrderItemRequest {
  /**
   * Constructs a new <code>SearchOrderItemRequest</code>.
   * @alias module:model/SearchOrderItemRequest
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>SearchOrderItemRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SearchOrderItemRequest} obj Optional instance to populate.
   * @return {module:model/SearchOrderItemRequest} The populated <code>SearchOrderItemRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SearchOrderItemRequest();
      if (data.hasOwnProperty('filter'))
        obj.filter = Filter.constructFromObject(data['filter']);
      if (data.hasOwnProperty('pagination'))
        obj.pagination = Pagination.constructFromObject(data['pagination']);
      if (data.hasOwnProperty('sort'))
        obj.sort = Sort.constructFromObject(data['sort']);
    }
    return obj;
  }
}

/**
 * @member {module:model/Filter} filter
 */
SearchOrderItemRequest.prototype.filter = undefined;

/**
 * @member {module:model/Pagination} pagination
 */
SearchOrderItemRequest.prototype.pagination = undefined;

/**
 * @member {module:model/Sort} sort
 */
SearchOrderItemRequest.prototype.sort = undefined;

