/*
 * Flipkart Marketplace API
 * This API is offered by Flipkart Marketplace to sellers and partners for orders and listing management. <br /><br />You will need an access token to explore our APIs in the sandbox environment. For details on getting an access token, refer to the <a href='https://seller.flipkart.com/api-docs/FMSAPI.html#sandbox-environment'> documentation</a>. <br />Once you get the access token, use it to authorize the requests using the  <code>Authorize</code> button below. e.g. if your access token is <code>ACCTOK1</code>, the input for authorization should be <code>Bearer ACCTOK1</code>
 *
 * OpenAPI spec version: 3.0
 * Contact: seller-api-queries@flipkart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The Location model module.
 * @module model/Location
 * @version 3.0
 */
export class Location {
  /**
   * Constructs a new <code>Location</code>.
   * @alias module:model/Location
   * @class
   * @param id {String} 
   * @param status {module:model/Location.StatusEnum} 
   */
  constructor(id, status) {
    this.id = id;
    this.status = status;
  }

  /**
   * Constructs a <code>Location</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Location} obj Optional instance to populate.
   * @return {module:model/Location} The populated <code>Location</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Location();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('inventory'))
        obj.inventory = ApiClient.convertToType(data['inventory'], 'Number');
      if (data.hasOwnProperty('pending_inventory'))
        obj.pendingInventory = ApiClient.convertToType(data['pending_inventory'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {String} id
 */
Location.prototype.id = undefined;

/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Location.StatusEnum = {
  /**
   * value: "ENABLED"
   * @const
   */
  ENABLED: "ENABLED",

  /**
   * value: "DISABLED"
   * @const
   */
  DISABLED: "DISABLED"
};
/**
 * @member {module:model/Location.StatusEnum} status
 */
Location.prototype.status = undefined;

/**
 * @member {Number} inventory
 */
Location.prototype.inventory = undefined;

/**
 * @member {Number} pendingInventory
 */
Location.prototype.pendingInventory = undefined;

