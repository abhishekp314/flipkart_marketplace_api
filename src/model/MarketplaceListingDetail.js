/*
 * Flipkart Marketplace API
 * This API is offered by Flipkart Marketplace to sellers and partners for orders and listing management. <br /><br />You will need an access token to explore our APIs in the sandbox environment. For details on getting an access token, refer to the <a href='https://seller.flipkart.com/api-docs/FMSAPI.html#sandbox-environment'> documentation</a>. <br />Once you get the access token, use it to authorize the requests using the  <code>Authorize</code> button below. e.g. if your access token is <code>ACCTOK1</code>, the input for authorization should be <code>Bearer ACCTOK1</code>
 *
 * OpenAPI spec version: 3.0
 * Contact: seller-api-queries@flipkart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Location} from './Location';
import {ModelPackage} from './ModelPackage';
import {Price} from './Price';
import {ShippingFees} from './ShippingFees';
import {Tax} from './Tax';

/**
 * The MarketplaceListingDetail model module.
 * @module model/MarketplaceListingDetail
 * @version 3.0
 */
export class MarketplaceListingDetail {
  /**
   * Constructs a new <code>MarketplaceListingDetail</code>.
   * @alias module:model/MarketplaceListingDetail
   * @class
   * @param listingId {String} 
   * @param productId {String} 
   * @param price {module:model/Price} 
   * @param listingStatus {module:model/MarketplaceListingDetail.ListingStatusEnum} 
   * @param fulfillmentProfile {module:model/MarketplaceListingDetail.FulfillmentProfileEnum} 
   */
  constructor(listingId, productId, price, listingStatus, fulfillmentProfile) {
    this.listingId = listingId;
    this.productId = productId;
    this.price = price;
    this.listingStatus = listingStatus;
    this.fulfillmentProfile = fulfillmentProfile;
  }

  /**
   * Constructs a <code>MarketplaceListingDetail</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MarketplaceListingDetail} obj Optional instance to populate.
   * @return {module:model/MarketplaceListingDetail} The populated <code>MarketplaceListingDetail</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MarketplaceListingDetail();
      if (data.hasOwnProperty('listing_id'))
        obj.listingId = ApiClient.convertToType(data['listing_id'], 'String');
      if (data.hasOwnProperty('product_id'))
        obj.productId = ApiClient.convertToType(data['product_id'], 'String');
      if (data.hasOwnProperty('price'))
        obj.price = Price.constructFromObject(data['price']);
      if (data.hasOwnProperty('tax'))
        obj.tax = Tax.constructFromObject(data['tax']);
      if (data.hasOwnProperty('listing_status'))
        obj.listingStatus = ApiClient.convertToType(data['listing_status'], 'String');
      if (data.hasOwnProperty('shipping_fees'))
        obj.shippingFees = ShippingFees.constructFromObject(data['shipping_fees']);
      if (data.hasOwnProperty('fulfillment_profile'))
        obj.fulfillmentProfile = ApiClient.convertToType(data['fulfillment_profile'], 'String');
      if (data.hasOwnProperty('packages'))
        obj.packages = ApiClient.convertToType(data['packages'], [ModelPackage]);
      if (data.hasOwnProperty('locations'))
        obj.locations = ApiClient.convertToType(data['locations'], [Location]);
      if (data.hasOwnProperty('archived_status'))
        obj.archivedStatus = ApiClient.convertToType(data['archived_status'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} listingId
 */
MarketplaceListingDetail.prototype.listingId = undefined;

/**
 * @member {String} productId
 */
MarketplaceListingDetail.prototype.productId = undefined;

/**
 * @member {module:model/Price} price
 */
MarketplaceListingDetail.prototype.price = undefined;

/**
 * @member {module:model/Tax} tax
 */
MarketplaceListingDetail.prototype.tax = undefined;

/**
 * Allowed values for the <code>listingStatus</code> property.
 * @enum {String}
 * @readonly
 */
MarketplaceListingDetail.ListingStatusEnum = {
  /**
   * value: "ACTIVE"
   * @const
   */
  ACTIVE: "ACTIVE",

  /**
   * value: "INACTIVE"
   * @const
   */
  INACTIVE: "INACTIVE"
};
/**
 * @member {module:model/MarketplaceListingDetail.ListingStatusEnum} listingStatus
 */
MarketplaceListingDetail.prototype.listingStatus = undefined;

/**
 * @member {module:model/ShippingFees} shippingFees
 */
MarketplaceListingDetail.prototype.shippingFees = undefined;

/**
 * Allowed values for the <code>fulfillmentProfile</code> property.
 * @enum {String}
 * @readonly
 */
MarketplaceListingDetail.FulfillmentProfileEnum = {
  /**
   * value: "NON_FBF"
   * @const
   */
  NON_FBF: "NON_FBF",

  /**
   * value: "FBF_LITE"
   * @const
   */
  FBF_LITE: "FBF_LITE",

  /**
   * value: "FBF"
   * @const
   */
  FBF: "FBF"
};
/**
 * @member {module:model/MarketplaceListingDetail.FulfillmentProfileEnum} fulfillmentProfile
 */
MarketplaceListingDetail.prototype.fulfillmentProfile = undefined;

/**
 * @member {Array.<module:model/ModelPackage>} packages
 */
MarketplaceListingDetail.prototype.packages = undefined;

/**
 * @member {Array.<module:model/Location>} locations
 */
MarketplaceListingDetail.prototype.locations = undefined;

/**
 * Allowed values for the <code>archivedStatus</code> property.
 * @enum {String}
 * @readonly
 */
MarketplaceListingDetail.ArchivedStatusEnum = {
  /**
   * value: "ARCHIVED"
   * @const
   */
  ARCHIVED: "ARCHIVED",

  /**
   * value: "NONE"
   * @const
   */
  NONE: "NONE"
};
/**
 * @member {module:model/MarketplaceListingDetail.ArchivedStatusEnum} archivedStatus
 */
MarketplaceListingDetail.prototype.archivedStatus = undefined;

