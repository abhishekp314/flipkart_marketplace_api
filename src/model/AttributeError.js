/*
 * Flipkart Marketplace API
 * This API is offered by Flipkart Marketplace to sellers and partners for orders and listing management. <br /><br />You will need an access token to explore our APIs in the sandbox environment. For details on getting an access token, refer to the <a href='https://seller.flipkart.com/api-docs/FMSAPI.html#sandbox-environment'> documentation</a>. <br />Once you get the access token, use it to authorize the requests using the  <code>Authorize</code> button below. e.g. if your access token is <code>ACCTOK1</code>, the input for authorization should be <code>Bearer ACCTOK1</code>
 *
 * OpenAPI spec version: 3.0
 * Contact: seller-api-queries@flipkart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The AttributeError model module.
 * @module model/AttributeError
 * @version 3.0
 */
export class AttributeError {
  /**
   * Constructs a new <code>AttributeError</code>.
   * @alias module:model/AttributeError
   * @class
   * @param severity {module:model/AttributeError.SeverityEnum} 
   * @param code {Number} 
   * @param description {String} 
   * @param attribute {String} 
   */
  constructor(severity, code, description, attribute) {
    this.severity = severity;
    this.code = code;
    this.description = description;
    this.attribute = attribute;
  }

  /**
   * Constructs a <code>AttributeError</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AttributeError} obj Optional instance to populate.
   * @return {module:model/AttributeError} The populated <code>AttributeError</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AttributeError();
      if (data.hasOwnProperty('severity'))
        obj.severity = ApiClient.convertToType(data['severity'], 'String');
      if (data.hasOwnProperty('code'))
        obj.code = ApiClient.convertToType(data['code'], 'Number');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('attribute'))
        obj.attribute = ApiClient.convertToType(data['attribute'], 'String');
      if (data.hasOwnProperty('path'))
        obj.path = ApiClient.convertToType(data['path'], 'String');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>severity</code> property.
 * @enum {String}
 * @readonly
 */
AttributeError.SeverityEnum = {
  /**
   * value: "ERROR"
   * @const
   */
  ERROR: "ERROR",

  /**
   * value: "WARNING"
   * @const
   */
  WARNING: "WARNING"
};
/**
 * @member {module:model/AttributeError.SeverityEnum} severity
 */
AttributeError.prototype.severity = undefined;

/**
 * @member {Number} code
 */
AttributeError.prototype.code = undefined;

/**
 * @member {String} description
 */
AttributeError.prototype.description = undefined;

/**
 * @member {String} attribute
 */
AttributeError.prototype.attribute = undefined;

/**
 * @member {String} path
 */
AttributeError.prototype.path = undefined;

