/*
 * Flipkart Marketplace API
 * This API is offered by Flipkart Marketplace to sellers and partners for orders and listing management. <br /><br />You will need an access token to explore our APIs in the sandbox environment. For details on getting an access token, refer to the <a href='https://seller.flipkart.com/api-docs/FMSAPI.html#sandbox-environment'> documentation</a>. <br />Once you get the access token, use it to authorize the requests using the  <code>Authorize</code> button below. e.g. if your access token is <code>ACCTOK1</code>, the input for authorization should be <code>Bearer ACCTOK1</code>
 *
 * OpenAPI spec version: 3.0
 * Contact: seller-api-queries@flipkart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {ReturnsActionResponseV2} from '../model/ReturnsActionResponseV2';
import {ReturnsApproveRequest} from '../model/ReturnsApproveRequest';
import {ReturnsRejectRequest} from '../model/ReturnsRejectRequest';
import {ReturnsSearchResponseV2} from '../model/ReturnsSearchResponseV2';
import {SelfShipReturnCancellationRequest} from '../model/SelfShipReturnCancellationRequest';
import {SelfShipReturnCompleteRequest} from '../model/SelfShipReturnCompleteRequest';
import {SelfShipReturnPickupAttemptRequests} from '../model/SelfShipReturnPickupAttemptRequests';
import {SelfShipReturnPickupRequests} from '../model/SelfShipReturnPickupRequests';

/**
* ReturnsV2 service.
* @module api/ReturnsV2Api
* @version 3.0
*/
export class ReturnsV2Api {

    /**
    * Constructs a new ReturnsV2Api. 
    * @alias module:api/ReturnsV2Api
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the approveSelfShipReturns operation.
     * @callback moduleapi/ReturnsV2Api~approveSelfShipReturnsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReturnsActionResponseV2{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Approve self-ship returns
     * This operation is used to approve the self-ship returns.
     * @param {Object} opts Optional parameters
     * @param {module:model/ReturnsApproveRequest} opts.body 
     * @param {module:api/ReturnsV2Api~approveSelfShipReturnsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    approveSelfShipReturns(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json'];
      let returnType = ReturnsActionResponseV2;

      return this.apiClient.callApi(
        '/v2/returns/approve', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the cancelSelfShipReturn operation.
     * @callback moduleapi/ReturnsV2Api~cancelSelfShipReturnCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReturnsActionResponseV2{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel self-ship return
     * This operation is used to cancel the self-ship return
     * @param {Object} opts Optional parameters
     * @param {module:model/SelfShipReturnCancellationRequest} opts.body 
     * @param {module:api/ReturnsV2Api~cancelSelfShipReturnCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    cancelSelfShipReturn(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReturnsActionResponseV2;

      return this.apiClient.callApi(
        '/v2/returns/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getReturns operation.
     * @callback moduleapi/ReturnsV2Api~getReturnsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReturnsSearchResponseV2{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch returns
     * This operation is used to fetch returns based on given return created / modified date ranges or specific &#x60;returnIds&#x60; or &#x60;trackingIds&#x60;
     * @param {Object} opts Optional parameters
     * @param {String} opts.source 
     * @param {String} opts.modifiedAfter 
     * @param {String} opts.modifiedBefore 
     * @param {String} opts.createdAfter 
     * @param {String} opts.createdBefore 
     * @param {String} opts.returnIds Comma separated return ids. Max. 25 allowed.
     * @param {String} opts.trackingIds Comma separated tracking ids. Max. 25 allowed.
     * @param {String} opts.locationId 
     * @param {module:api/ReturnsV2Api~getReturnsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getReturns(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'source': opts['source'],'modifiedAfter': opts['modifiedAfter'],'modifiedBefore': opts['modifiedBefore'],'createdAfter': opts['createdAfter'],'createdBefore': opts['createdBefore'],'returnIds': opts['returnIds'],'trackingIds': opts['trackingIds'],'locationId': opts['locationId']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReturnsSearchResponseV2;

      return this.apiClient.callApi(
        '/v2/returns', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the pickup operation.
     * @callback moduleapi/ReturnsV2Api~pickupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReturnsActionResponseV2{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update self-ship returns pickup details
     * This operation is used to update the pickup details of customer self-ship returns.
     * @param {Object} opts Optional parameters
     * @param {module:model/SelfShipReturnPickupRequests} opts.body 
     * @param {module:api/ReturnsV2Api~pickupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    pickup(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReturnsActionResponseV2;

      return this.apiClient.callApi(
        '/v2/returns/pickup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the pickupAttempt operation.
     * @callback moduleapi/ReturnsV2Api~pickupAttemptCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReturnsActionResponseV2{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update self-ship returns pickup attempt
     * This operation is used to update the failed pickup attempt of self-ship returns.
     * @param {Object} opts Optional parameters
     * @param {module:model/SelfShipReturnPickupAttemptRequests} opts.body 
     * @param {module:api/ReturnsV2Api~pickupAttemptCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    pickupAttempt(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReturnsActionResponseV2;

      return this.apiClient.callApi(
        '/v2/returns/pickupAttempt', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the rejectSelfShipReturns operation.
     * @callback moduleapi/ReturnsV2Api~rejectSelfShipReturnsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReturnsActionResponseV2{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reject self-ship returns
     * This operation is used to reject customer self-ship returns.
     * @param {Object} opts Optional parameters
     * @param {module:model/ReturnsRejectRequest} opts.body 
     * @param {module:api/ReturnsV2Api~rejectSelfShipReturnsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    rejectSelfShipReturns(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json'];
      let returnType = ReturnsActionResponseV2;

      return this.apiClient.callApi(
        '/v2/returns/reject', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the returnComplete operation.
     * @callback moduleapi/ReturnsV2Api~returnCompleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReturnsActionResponseV2{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update self-ship returns as complete
     * This operation is used to mark the self-ship returns as complete.
     * @param {Object} opts Optional parameters
     * @param {module:model/SelfShipReturnCompleteRequest} opts.body 
     * @param {module:api/ReturnsV2Api~returnCompleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    returnComplete(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReturnsActionResponseV2;

      return this.apiClient.callApi(
        '/v2/returns/complete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}