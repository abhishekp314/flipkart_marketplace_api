/*
 * Flipkart Marketplace API
 * This API is offered by Flipkart Marketplace to sellers and partners for orders and listing management. <br /><br />You will need an access token to explore our APIs in the sandbox environment. For details on getting an access token, refer to the <a href='https://seller.flipkart.com/api-docs/FMSAPI.html#sandbox-environment'> documentation</a>. <br />Once you get the access token, use it to authorize the requests using the  <code>Authorize</code> button below. e.g. if your access token is <code>ACCTOK1</code>, the input for authorization should be <code>Bearer ACCTOK1</code>
 *
 * OpenAPI spec version: 3.0
 * Contact: seller-api-queries@flipkart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FlipkartMarketplaceApi);
  }
}(this, function(expect, FlipkartMarketplaceApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FlipkartMarketplaceApi.OrdersV2Api();
  });

  describe('(package)', function() {
    describe('OrdersV2Api', function() {
      describe('cancelOrders', function() {
        it('should call cancelOrders successfully', function(done) {
          // TODO: uncomment, update parameter values for cancelOrders call and complete the assertions
          /*
          var opts = {};

          instance.cancelOrders(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.OrderItemCancelResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getBulkActionProgressByRequestId', function() {
        it('should call getBulkActionProgressByRequestId successfully', function(done) {
          // TODO: uncomment, update parameter values for getBulkActionProgressByRequestId call and complete the assertions
          /*

          instance.getBulkActionProgressByRequestId(requestId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.BulkActionProgressResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getInvoicesInfo', function() {
        it('should call getInvoicesInfo successfully', function(done) {
          // TODO: uncomment, update parameter values for getInvoicesInfo call and complete the assertions
          /*
          var opts = {};

          instance.getInvoicesInfo(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.InvoicesSearchResponseV2);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getLabels', function() {
        it('should call getLabels successfully', function(done) {
          // TODO: uncomment, update parameter values for getLabels call
          /*
          var opts = {};

          instance.getLabels(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getManifestPdfForRequest', function() {
        it('should call getManifestPdfForRequest successfully', function(done) {
          // TODO: uncomment getManifestPdfForRequest call
          /*

          instance.getManifestPdfForRequest(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOrderItemById', function() {
        it('should call getOrderItemById successfully', function(done) {
          // TODO: uncomment, update parameter values for getOrderItemById call and complete the assertions
          /*

          instance.getOrderItemById(orderItemId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.OrderItem);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOrderItemsByIds', function() {
        it('should call getOrderItemsByIds successfully', function(done) {
          // TODO: uncomment, update parameter values for getOrderItemsByIds call and complete the assertions
          /*
          var opts = {};

          instance.getOrderItemsByIds(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.FetchOrderItemsResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getShipments', function() {
        it('should call getShipments successfully', function(done) {
          // TODO: uncomment, update parameter values for getShipments call and complete the assertions
          /*
          var opts = {};

          instance.getShipments(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.ShipmentSearchResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('searchOrderItemRequest', function() {
        it('should call searchOrderItemRequest successfully', function(done) {
          // TODO: uncomment, update parameter values for searchOrderItemRequest call and complete the assertions
          /*
          var opts = {};

          instance.searchOrderItemRequest(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.SearchOrderItemResponseV2);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('submitBulkConfirmRequest', function() {
        it('should call submitBulkConfirmRequest successfully', function(done) {
          // TODO: uncomment, update parameter values for submitBulkConfirmRequest call and complete the assertions
          /*
          var opts = {};

          instance.submitBulkConfirmRequest(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.BulkConfirmResponseV2);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('submitBulkRtdRequest', function() {
        it('should call submitBulkRtdRequest successfully', function(done) {
          // TODO: uncomment, update parameter values for submitBulkRtdRequest call and complete the assertions
          /*
          var opts = {};

          instance.submitBulkRtdRequest(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.BulkRtdResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('submitSelfShipDeliverAttemptRequest', function() {
        it('should call submitSelfShipDeliverAttemptRequest successfully', function(done) {
          // TODO: uncomment, update parameter values for submitSelfShipDeliverAttemptRequest call and complete the assertions
          /*
          var opts = {};

          instance.submitSelfShipDeliverAttemptRequest(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.ShipmentsDeliverResponseV2);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('submitSelfShipDeliverRequest', function() {
        it('should call submitSelfShipDeliverRequest successfully', function(done) {
          // TODO: uncomment, update parameter values for submitSelfShipDeliverRequest call and complete the assertions
          /*
          var opts = {};

          instance.submitSelfShipDeliverRequest(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.ShipmentsDeliverResponseV2);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('submitSelfShipmentDispatchRequest', function() {
        it('should call submitSelfShipmentDispatchRequest successfully', function(done) {
          // TODO: uncomment, update parameter values for submitSelfShipmentDispatchRequest call and complete the assertions
          /*
          var opts = {};

          instance.submitSelfShipmentDispatchRequest(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.ShipmentsDispatchResponseV2);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('submitServiceAttemptRequest', function() {
        it('should call submitServiceAttemptRequest successfully', function(done) {
          // TODO: uncomment, update parameter values for submitServiceAttemptRequest call and complete the assertions
          /*
          var opts = {};

          instance.submitServiceAttemptRequest(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.ServiceResponseStatusV2);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('submitServiceCompleteRequest', function() {
        it('should call submitServiceCompleteRequest successfully', function(done) {
          // TODO: uncomment, update parameter values for submitServiceCompleteRequest call and complete the assertions
          /*
          var opts = {};

          instance.submitServiceCompleteRequest(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FlipkartMarketplaceApi.ServiceResponseStatusV2);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
